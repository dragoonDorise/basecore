//
//
// Hi there! Remember you are not suposed to be here.
// All customization must be done in _custom_ files!!
//
//
* {
  box-sizing: border-box;
}
@import "/src/utils/grid-layout/grid-layout.scss";

.container {
  padding-right: calc(var(--grid-gutter) / 2);
  padding-left: calc(var(--grid-gutter) / 2);
  margin-right: auto;
  margin-left: auto;
  min-width: 320px;
  transition: width 0.4s;
  @media (min-width: $screen-sm) {
    width: var(--container-sm);
  }

  @media (min-width: $screen-md) {
    width: var(--container-md);
  }

  @media (min-width: $screen-lg) {
    width: var(--container-lg);
  }

  @media (min-width: $screen-xl) {
    width: var(--container-xl);
  }

  &--fluid {
    width: 100%;
    padding: 0;
  }

  &--mixed {
    width: 100%;
    max-width: var(--container-grid-mixed-width);
    padding: 0;
    display: block;
  }
}

.container--grid {
  display: grid;
  grid-template-columns: repeat($columns, minmax(0, 1fr));
  grid-column-gap: var(--grid-gutter);

  @media (max-width: $screen-xs-max) {
    grid-template-columns: repeat($columns-xs, minmax(0, 1fr));
  }

  > * {
    grid-column-end: span $columns;
    @media (max-width: $screen-xs-max) {
      grid-column-end: span $columns-xs;
    }
  }

  &--no-padding {
    grid-column-gap: 0;
  }

  &--justify-start {
    justify-content: start;
  }

  &--justify-center {
    justify-content: center;
  }

  &--justify-stretch {
    justify-content: stretch;
  }

  &--justify-end {
    justify-content: end;
  }
}

@mixin create-grid-layout($size) {
  $creen-size: 1px;

  $columns: $columns;

  @if $size == "xs" {
    $creen-size: 1px;
    $columns: $columns-xs;
  }
  @if $size == "sm" {
    $creen-size: $screen-sm;
  }
  @if $size == "md" {
    $creen-size: $screen-md;
  }
  @if $size == "lg" {
    $creen-size: $screen-lg;
  }
  @if $size == "xl" {
    $creen-size: $screen-xl;
  }

  // Columns
  @media (min-width: $creen-size) {
    @for $i from 1 through $columns {
      [data-col-#{$size}="#{$i}"] {
        grid-column-end: span $i;
      }
    }
  }

  // Column start
  @media (min-width: $creen-size) {
    @for $i from 1 through $columns {
      [data-col-start-#{$size}="#{$i}"] {
        grid-column-start: $i;
      }
    }
  }
}

@include create-grid-layout(xs);
@include create-grid-layout(sm);
@include create-grid-layout(md);
@include create-grid-layout(lg);
@include create-grid-layout(xl);

//En XS desactivamos column start
@media (max-width: $screen-xs-max) {
  [data-col-start-sm],
  [data-col-start-md],
  [data-col-start-lg],
  [data-col-start-xl] {
    grid-column-start: 1;
  }
}
